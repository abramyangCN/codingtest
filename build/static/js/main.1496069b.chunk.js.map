{"version":3,"sources":["components/Header.jsx","components/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","title","color","toolBar","background","Header","classes","className","AppBar","position","Toolbar","Typography","variant","useStyles1","flexShrink","marginLeft","spacing","TablePaginationActions","props","useTheme","count","page","rowsPerPage","onChangePage","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","createData","id","name","calories","fat","rowsData","sort","a","b","useStyles2","table","minWidth","width","tableContainer","margin","CustomPaginationActionsTable","React","useState","setPage","setRowsPerPage","rows","setRows","emptyRows","min","length","TableContainer","component","Paper","Table","TableHead","TableRow","Object","keys","map","tHead","index","TableCell","scope","TableBody","slice","row","style","cursor","console","log","handleCheck","handleEdit","deleteEl","deletedRows","filter","r","handleDelete","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","labelRowsPerPage","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1496069b.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n  },\n  title: {\n    // flexGrow: 1,\n    color: '#787d81'\n  },\n  toolBar: {\n    background: 'white'\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" className={classes.title}>\n            产品详情\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport FindInPageOutlinedIcon from '@material-ui/icons/FindInPageOutlined';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='第一页'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='上一页'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='下一页'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='最后一页'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(id, name, calories, fat) {\n  return { id, name, calories, fat };\n}\n\nconst rowsData = [\n  createData(1, 'Cupcake', 305, 3.7),\n  createData(2, 'Donut', 452, 25.0),\n  createData(3, 'Eclair', 262, 16.0),\n  createData(4, 'Frozen yoghurt', 159, 6.0),\n  createData(5, 'Gingerbread', 356, 16.0),\n  createData(6, 'Honeycomb', 408, 3.2),\n  createData(7, 'Ice cream sandwich', 237, 9.0),\n  createData(8, 'Jelly Bean', 375, 0.0),\n  createData(9, 'KitKat', 518, 26.0),\n  createData(10, 'Lollipop', 392, 0.2),\n  createData(11, 'Marshmallow', 318, 0),\n  createData(12, 'Nougat', 360, 19.0),\n  createData(13, 'Oreo', 437, 18.0),\n].sort((a, b) => (a.id < b.id ? -1 : 1));\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n    width: '100%',\n  },\n  tableContainer: {\n    margin: 50,\n    width: 'auto',\n  },\n});\n\nexport default function CustomPaginationActionsTable() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState(rowsData);\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = (deleteEl) => {\n    const deletedRows = rows.filter((r) => r.id !== deleteEl.id);\n    setRows(deletedRows);\n  };\n\n  const handleCheck = ({ name }) => {\n    console.log(`我查看了${name}！`);\n  };\n\n  const handleEdit = ({ name }) => {\n    console.log(`我正在编辑${name}！`);\n  };\n\n  return (\n    <TableContainer component={Paper} className={classes.tableContainer}>\n      {rows.length === 0 ? (\n        '暂无数据！'\n      ) : (\n        <Table className={classes.table} aria-label='custom pagination table'>\n          <TableHead>\n            <TableRow>\n              {Object.keys(rows[0]).map((tHead, index) => (\n                <TableCell component='th' key={index} scope='row'>\n                  {tHead}\n                </TableCell>\n              ))}\n              <TableCell component='th' scope='row'>\n                操作\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {(rowsPerPage > 0\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              : rows\n            ).map((row, index) => (\n              <TableRow key={index}>\n                <TableCell component='th' scope='row'>\n                  {row.id}\n                </TableCell>\n                <TableCell\n                  style={{ color: '#56abc3', cursor: 'pointer' }}\n                  component='th'\n                  scope='row'\n                >\n                  {row.name}\n                </TableCell>\n                <TableCell style={{ width: 160 }}>{row.calories}</TableCell>\n                <TableCell style={{ width: 160 }}>{row.fat}</TableCell>\n                <TableCell style={{ width: 160 }}>\n                  <FindInPageOutlinedIcon onClick={() => handleCheck(row)} />\n                  <EditOutlinedIcon onClick={() => handleEdit(row)} />\n                  <DeleteOutlinedIcon onClick={() => handleDelete(row)} />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 53 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TableCell>{`共有${rows.length}条数据`}</TableCell>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25, { label: '全部', value: -1 }]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                labelRowsPerPage={'条/页'}\n                SelectProps={{\n                  inputProps: { 'aria-label': '条/页' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      )}\n    </TableContainer>\n  );\n}\n","import './App.css';\nimport Header from './components/Header';\nimport Table from './components/Table'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}